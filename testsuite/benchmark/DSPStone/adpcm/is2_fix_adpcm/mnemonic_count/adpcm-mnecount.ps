%!
%%EndComments
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Scaling information
%
% Change these if you would like to change the centering
% of the plot in either dimension
/X-CENTER-PLOT 1 def
/Y-CENTER-PLOT 1 def
%
% Page size computation
clippath pathbbox
/page-height exch def
/page-width exch def
pop pop
% Determine whether rotation is required
538.583 page-width gt
{ % Rotation required
   90 rotate
   0 page-width neg translate
   % Handle centering
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   translate
} { % No rotation - just handle centering
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   translate
} ifelse
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
300 /Times-Bold choose-font
(Mnemonic Count Histogram adpcm.asm) 4488 8856 3 just-string
200 /Times-Roman choose-font
(adpcm.xg) 5346 8104 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  5346 8136 moveto
  6226 8136 lineto
stroke
(Percent of Total Move&Transfer Operations) 90 8496 2 just-string
(2 vs 4 instruct cycles operations) 8886 380 5 just-string
(0.00) 860 731 5 just-string
(2.00) 860 1085 5 just-string
(4.00) 860 1439 5 just-string
(6.00) 860 1793 5 just-string
(8.00) 860 2147 5 just-string
(10.00) 860 2501 5 just-string
(12.00) 860 2855 5 just-string
(14.00) 860 3209 5 just-string
(16.00) 860 3563 5 just-string
(18.00) 860 3917 5 just-string
(20.00) 860 4270 5 just-string
(22.00) 860 4624 5 just-string
(24.00) 860 4978 5 just-string
(26.00) 860 5332 5 just-string
(28.00) 860 5686 5 just-string
(30.00) 860 6040 5 just-string
(32.00) 860 6394 5 just-string
(34.00) 860 6748 5 just-string
(36.00) 860 7102 5 just-string
(38.00) 860 7456 5 just-string
(40.00) 860 7810 5 just-string
(0.00) 1146 90 7 just-string
(2.00) 2264 90 7 just-string
(4.00) 3383 90 7 just-string
(6.00) 4501 90 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  950 731 moveto
  5256 731 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1085 moveto
  5256 1085 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1439 moveto
  5256 1439 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1793 moveto
  5256 1793 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2147 moveto
  5256 2147 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2501 moveto
  5256 2501 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2855 moveto
  5256 2855 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3209 moveto
  5256 3209 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3563 moveto
  5256 3563 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3917 moveto
  5256 3917 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4270 moveto
  5256 4270 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4624 moveto
  5256 4624 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4978 moveto
  5256 4978 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5332 moveto
  5256 5332 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5686 moveto
  5256 5686 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6040 moveto
  5256 6040 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6394 moveto
  5256 6394 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6748 moveto
  5256 6748 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7102 moveto
  5256 7102 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7456 moveto
  5256 7456 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7810 moveto
  5256 7810 lineto
stroke
[] 0 setdash
8 setlinewidth
newpath
  1146 8106 moveto
  1146 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2264 8106 moveto
  2264 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3383 8106 moveto
  3383 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  4501 8106 moveto
  4501 380 lineto
stroke
559 setlinewidth
newpath
  1705 908 moveto
  1705 7693 lineto
stroke
newpath
  2264 908 moveto
  2264 2690 lineto
stroke
newpath
  2823 908 moveto
  2823 981 lineto
stroke
newpath
  3383 908 moveto
  3383 2232 lineto
stroke
newpath
  3942 908 moveto
  3942 731 lineto
stroke
newpath
  4501 908 moveto
  4501 7755 lineto
stroke
showpage
% End of xgraph output
