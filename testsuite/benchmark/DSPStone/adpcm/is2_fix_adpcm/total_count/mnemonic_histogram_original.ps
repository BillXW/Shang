%!
%%EndComments
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Scaling information
%
% Change these if you would like to change the centering
% of the plot in either dimension
/X-CENTER-PLOT 1 def
/Y-CENTER-PLOT 1 def
%
% Page size computation
clippath pathbbox
/page-height exch def
/page-width exch def
pop pop
% Determine whether rotation is required
538.583 page-width gt
{ % Rotation required
   90 rotate
   0 page-width neg translate
   % Handle centering
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   translate
} { % No rotation - just handle centering
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   translate
} ifelse
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
300 /Times-Bold choose-font
(Mnemonic Count Histogram opt_adpcm.asm (straight forward)) 4488 8856 3 just-string
200 /Times-Roman choose-font
(opt_adpcm-orig.xg) 5786 8104 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  5786 8136 moveto
  7656 8136 lineto
stroke
(Percent of Total Instructions) 90 8496 2 just-string
(Assembler Instructions Groups) 8886 380 5 just-string
(0.00) 860 731 5 just-string
(5.00) 860 1247 5 just-string
(10.00) 860 1764 5 just-string
(15.00) 860 2280 5 just-string
(20.00) 860 2796 5 just-string
(25.00) 860 3312 5 just-string
(30.00) 860 3828 5 just-string
(35.00) 860 4345 5 just-string
(40.00) 860 4861 5 just-string
(45.00) 860 5377 5 just-string
(50.00) 860 5893 5 just-string
(55.00) 860 6410 5 just-string
(60.00) 860 6926 5 just-string
(65.00) 860 7442 5 just-string
(70.00) 860 7958 5 just-string
(0.00) 1166 90 7 just-string
(2.00) 2398 90 7 just-string
(4.00) 3631 90 7 just-string
(6.00) 4864 90 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  950 731 moveto
  5696 731 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1247 moveto
  5696 1247 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1764 moveto
  5696 1764 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2280 moveto
  5696 2280 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2796 moveto
  5696 2796 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3312 moveto
  5696 3312 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3828 moveto
  5696 3828 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4345 moveto
  5696 4345 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4861 moveto
  5696 4861 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5377 moveto
  5696 5377 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5893 moveto
  5696 5893 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6410 moveto
  5696 6410 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6926 moveto
  5696 6926 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7442 moveto
  5696 7442 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7958 moveto
  5696 7958 lineto
stroke
[] 0 setdash
8 setlinewidth
newpath
  1166 8106 moveto
  1166 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2398 8106 moveto
  2398 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3631 8106 moveto
  3631 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  4864 8106 moveto
  4864 380 lineto
stroke
616 setlinewidth
newpath
  1782 834 moveto
  1782 7755 lineto
stroke
newpath
  2398 834 moveto
  2398 1162 lineto
stroke
newpath
  3015 834 moveto
  3015 1037 lineto
stroke
newpath
  3631 834 moveto
  3631 1708 lineto
stroke
newpath
  4248 834 moveto
  4248 731 lineto
stroke
newpath
  4864 834 moveto
  4864 2319 lineto
stroke
showpage
% End of xgraph output
