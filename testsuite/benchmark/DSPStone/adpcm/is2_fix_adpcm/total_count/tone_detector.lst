1                                        ;
2                                        ;       annotate version 1.03
3                                        ;
4                                        ; **************************************************
5                                        ; **************************************************
6                                                  section tone_detector_c
7                                                  opt     so,nomd
8                                                  page    132,66,3,3
9                                        ;*** DSP56000/1 Motorola 1.03 GNU 1.37.1
10        P:0000                                   org     p:
11                                                 global  Ftone_detector
12                                       Ftone_detector
13                                       ; **************************************************
14                                       ; /* Global signals */
15                                       ; int A_2, AL, D, I, SD, S_E, SL, SP, TDP;
16                                       ; 
17                                       ; 
18                                       ; typedef struct
19                                       ; {
20                                       ;   int DQ, T, Y, YL, DQ2, DQ3, DQ4, DQ5, DQ6, DQ7, PK1, PK2, SR2,
21                                       ;       A1, A2, B[6], SE, SEZ, t_dr, LAST_TR, DMS, DML, AP, Y_L, LAST_Y;
22                                       ; } STATES;
23                                       ; 
24                                       ; void tone_detector(STATES* S)
25                                       ; {
26                                       ;   /*
27                                       ;    * tone detector
28                                       ;    *
29                                       ;    * Input signals:  DQ, A_2, YL
30                                       ;    * Output signals: T, TDP;
31                                       ;    */
32                                       ; 
33                                       ;   register int tmp; 
34                                       ;   register int t_d; 
35                                       ; 
36                                       ;   /* partial band signal detection */
37                                       ;   TDP = ((A_2 > 32769) && (A_2 < 53761)) ? 1 : 0 ; 
38                                       ; **************************************************
39        P:0000 70F400  [4 -        4]            move              #65533,n0
                 00FFFD
40        P:0002 3E0300  [2 -        6]            move              #3,n6
41        P:0003 56F400  [4 -       10]            move              #>32769,a
                 008001
42        P:0005 605E00  [2 -       12]            move              r0,x:(r6)+
43        P:0006 205E00  [2 -       14]            move              (r6)+
44        P:0007 22D000  [2 -       16]            move              r6,r0
45        P:0008 204E00  [2 -       18]            move              (r6)+n6
46        P:0009 515E00  [2 -       20]            move              b0,x:(r6)+
47        P:000A 555E00  [2 -       22]            move              b1,x:(r6)+
48        P:000B 445E00  [2 -       24]            move              x0,x:(r6)+
49        P:000C 455E00  [2 -       26]            move              x1,x:(r6)+
50        P:000D 615E00  [2 -       28]            move              r1,x:(r6)+
51        P:000E 61E800  [4 -       32]            move              x:(r0+n0),r1
52        P:000F 45F000  [4 -       36]            move              x:FA_2,x1
                 000008
53        P:0011 200069  [2 -       38]            tfr     x1,b
54        P:0012 20000D  [2 -       40]            cmp     a,b
55        P:0013 0AF0AF  [6 -       46]            jle     L2
                 00001E
56        P:0015 56F400  [4 -       50]            move              #>53760,a
                 00D200
57        P:0017 20000D  [2 -       52]            cmp     a,b
58        P:0018 0AF0A7  [6 -       58]            jgt     L2
                 00001E
59        P:001A 56F400  [4 -       62]            move              #>1,a
                 000001
60        P:001C 0AF080  [6 -       68]            jmp     L3
                 00001F
61                                       L2
62        P:001E 200013  [2 -       70]            clr     a
63                                       L3
64                                       ; **************************************************
65                                       ;   
66                                       ;   /* take last (t_dr) */
67                                       ;   t_d = (S->t_dr);
68                                       ; **************************************************
69                                       ; **************************************************
70                                       ;   
71                                       ;   /* calcutale new  (S->t_dr)  */
72                                       ;   /* TRIGB Function */
73                                       ;   S->t_dr = S->LAST_TR ? 0 : TDP; 
74                                       ; **************************************************
75        P:001F 391700  [2 -       72]            move              #23,n1
76        P:0020 547000  [4 -       76]            move              a1,x:FTDP
                 000000
77        P:0022 45E900  [4 -       80]            move              x:(r1+n1),x1
78        P:0023 391800  [2 -       82]            move              #24,n1
79        P:0024 205800  [2 -       84]            move              (r0)+
80        P:0025 455000  [2 -       86]            move              x1,x:(r0)-
81        P:0026 56E900  [4 -       90]            move              x:(r1+n1),a
82        P:0027 200003  [2 -       92]            tst     a
83        P:0028 0AF0AA  [6 -       98]            jeq     L4
                 00002D
84        P:002A 200013  [2 -      100]            clr     a
85        P:002B 0AF080  [6 -      106]            jmp     L5
                 00002F
86                                       L4
87        P:002D 56F000  [4 -      110]            move              x:FTDP,a
                 000000
88                                       L5
89                                       ; **************************************************
90                                       ;   
91                                       ;   S->LAST_TR = S->YL >> 15; /* (*LAST_TR)  is used here as a temporary variable */
92                                       ; **************************************************
93        P:002F 391700  [2 -      112]            move              #23,n1
94        P:0030 546900  [4 -      116]            move              a1,x:(r1+n1)
95        P:0031 390300  [2 -      118]            move              #3,n1
96        P:0032 56E900  [4 -      122]            move              x:(r1+n1),a
97        P:0033 218E00  [2 -      124]            move              a1,a
98        P:0034 060FA0  [4 -      128]            rep     #15
99        P:0035 200022  [2 -      130]            asr     a
100                                      ; **************************************************
101                                      ;   
102                                      ;   tmp = ((S->LAST_TR) > 8) ? 31 << 9 :
103                                      ;         (32 + ((S->LAST_TR << 5) & 31)) << S->LAST_TR; 
104                                      ; **************************************************
105       P:0036 391800  [2 -      132]            move              #24,n1
106       P:0037 57F400  [4 -      136]            move              #>8,b
                 000008
107       P:0039 218E00  [2 -      138]            move              a1,a
108       P:003A 546905  [4 -      142]            cmp     b,a       a1,x:(r1+n1)
109       P:003B 0AF0AF  [6 -      148]            jle     L6
                 000042
110       P:003D 45F400  [4 -      152]            move              #>15872,x1
                 003E00
111       P:003F 456000  [2 -      154]            move              x1,x:(r0)
112       P:0040 0AF080  [6 -      160]            jmp     L7
                 000056
113                                      L6
114       P:0042 391800  [2 -      162]            move              #24,n1
115       P:0043 56E900  [4 -      166]            move              x:(r1+n1),a
116       P:0044 0605A0  [4 -      170]            rep     #5
117       P:0045 200032  [2 -      172]            asl     a
118       P:0046 57E900  [4 -      176]            move              x:(r1+n1),b
119       P:0047 45F400  [4 -      180]            move              #>32,x1
                 000020
120       P:0049 44F400  [4 -      184]            move              #>31,x0
                 00001F
121       P:004B 218E00  [2 -      186]            move              a1,a
122       P:004C 200046  [2 -      188]            and     x0,a
123       P:004D 218E00  [2 -      190]            move              a1,a
124       P:004E 200060  [2 -      192]            add     x1,a
125       P:004F 20000B  [2 -      194]            tst     b
126       P:0050 0AF0AA  [6 -      200]            jeq     L10
                 000055
127       P:0052 06CF20  [4 -      204]            rep     b
128       P:0053 200032  [2 -      206]            asl     a
129       P:0054 218E00  [2 -      208]            move              a1,a
130                                      L10
131       P:0055 546000  [2 -      210]            move              a1,x:(r0)
132                                      L7
133                                      ; **************************************************
134                                      ;   
135                                      ;   S->LAST_TR = S->T = (((S->DQ & 16383) > (tmp + (tmp >> 1)) >> 1) 
136                                      ;                     && (t_d == 1)) ? 1 : 0;
137                                      ; **************************************************
138       P:0056 57E000  [2 -      212]            move              x:(r0),b
139       P:0057 21AF00  [2 -      214]            move              b1,b
140       P:0058 44F42A  [4 -      218]            asr     b         #>16383,x0
                 003FFF
141       P:005A 21AF00  [2 -      220]            move              b1,b
142       P:005B 21A500  [2 -      222]            move              b1,x1
143       P:005C 57E000  [2 -      224]            move              x:(r0),b
144       P:005D 56E168  [2 -      226]            add     x1,b      x:(r1),a
145       P:005E 21AF46  [2 -      228]            and     x0,a      b1,b
146       P:005F 218E2A  [2 -      230]            asr     b         a1,a
147       P:0060 21AF00  [2 -      232]            move              b1,b
148       P:0061 21A500  [2 -      234]            move              b1,x1
149       P:0062 200065  [2 -      236]            cmp     x1,a
150       P:0063 0AF0AF  [6 -      242]            jle     L8
                 00006C
151       P:0065 56F400  [4 -      246]            move              #>1,a
                 000001
152       P:0067 205800  [2 -      248]            move              (r0)+
153       P:0068 57D000  [2 -      250]            move              x:(r0)-,b
154       P:0069 20000D  [2 -      252]            cmp     a,b
155       P:006A 0AF0AA  [6 -      258]            jeq     L9
                 00006D
156                                      L8
157       P:006C 200013  [2 -      260]            clr     a
158                                      L9
159                                      ; **************************************************
160                                      ; }
161                                      ; **************************************************
162       P:006D 391800  [2 -      262]            move              #24,n1
163       P:006E 205000  [2 -      264]            move              (r0)-
164       P:006F 205000  [2 -      266]            move              (r0)-
165       P:0070 205600  [2 -      268]            move              (r6)-
166       P:0071 205900  [2 -      270]            move              (r1)+
167       P:0072 545100  [2 -      272]            move              a1,x:(r1)-
168       P:0073 546900  [4 -      276]            move              a1,x:(r1+n1)
169       P:0074 61D600  [2 -      278]            move              x:(r6)-,r1
170       P:0075 45D600  [2 -      280]            move              x:(r6)-,x1
171       P:0076 44D600  [2 -      282]            move              x:(r6)-,x0
172       P:0077 57D600  [2 -      284]            move              x:(r6)-,b
173       P:0078 51E600  [2 -      286]            move              x:(r6),b0
174       P:0079 221600  [2 -      288]            move              r0,r6
175       P:007A 60E000  [2 -      290]            move              x:(r0),r0
176       P:007B 00000C  [4 -      294]            rts
177    
178       X:0000                                   org     x:
179                                                global  FTDP
180       X:0000 000000                  FTDP      bsc     1
181                                                global  FSP
182       X:0001 000000                  FSP       bsc     1
183                                                global  FSL
184       X:0002 000000                  FSL       bsc     1
185                                                global  FS_E
186       X:0003 000000                  FS_E      bsc     1
187                                                global  FSD
188       X:0004 000000                  FSD       bsc     1
189                                                global  FI
190       X:0005 000000                  FI        bsc     1
191                                                global  FD
192       X:0006 000000                  FD        bsc     1
193                                                global  FAL
194       X:0007 000000                  FAL       bsc     1
195                                                global  FA_2
196       X:0008 000000                  FA_2      bsc     1
197    
198                                                endsec
199    
200    
3    Errors
0    Warnings
