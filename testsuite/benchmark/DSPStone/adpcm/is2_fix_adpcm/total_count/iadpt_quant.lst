1                                        ;
2                                        ;       annotate version 1.03
3                                        ;
4                                        ; **************************************************
5                                        ; **************************************************
6                                                  section iadpt_quant_c
7                                                  opt     so,nomd
8                                                  page    132,66,3,3
9                                        ;*** DSP56000/1 Motorola 1.03 GNU 1.37.1
10        P:0000                                   org     p:
11        X:0000                                   org     x:
12                                       F___qtab0
13        X:0000                                   dc      2048
14        X:0001                                   dc      4
15        X:0002                                   dc      135
16        X:0003                                   dc      213
17        X:0004                                   dc      273
18        X:0005                                   dc      323
19        X:0006                                   dc      373
20        X:0007                                   dc      425
21        X:0008                                   dc      425
22        X:0009                                   dc      373
23        X:000A                                   dc      323
24        X:000B                                   dc      273
25        X:000C                                   dc      213
26        X:000D                                   dc      135
27        X:000E                                   dc      4
28        X:000F                                   dc      2048
29        P:0000                                   org     p:
30                                                 global  Fiadpt_quant
31                                       Fiadpt_quant
32                                       ; **************************************************
33                                       ; /* Global signals */
34                                       ; int A_2, AL, D, I, SD, S_E, SL, SP, TDP;
35                                       ; 
36                                       ; 
37                                       ; typedef struct
38                                       ; {
39                                       ;   int DQ, T, Y, YL, DQ2, DQ3, DQ4, DQ5, DQ6, DQ7, PK1, PK2, SR2,
40                                       ;       A1, A2, B[6], SE, SEZ, t_dr, LAST_TR, DMS, DML, AP, Y_L, LAST_Y;
41                                       ; } STATES;
42                                       ; 
43                                       ; 
44                                       ; void iadpt_quant(STATES* S)
45                                       ; {
46                                       ;   /*
47                                       ;    * inverse adaptive quantizer
48                                       ;    * 
49                                       ;    * Input signals:  I, Y
50                                       ;    * Output signals: DQ
51                                       ;    */
52                                       ;  
53                                       ;   static int qtab[] =
54                                       ;   {
55                                       ;     2048, 4, 135, 213, 273, 323, 373, 425,
56                                       ;     425, 373, 323, 273, 213, 135, 4, 2048,
57                                       ;   } ;
58                                       ;   register int DQL;
59                                       ; 
60                                       ;   /* RECONST and ADDA */
61                                       ;   DQL = (qtab[I] + (S->Y >> 2)) & 4095;
62                                       ; **************************************************
63                                       ; **************************************************
64                                       ; 
65                                       ;   /* ANTILOG */
66                                       ;   S->DQ = ((I & (1 << 3)) * (1 << 11)) +
67                                       ;           (DQL & (1 << 11) ? 0 :
68                                       ;           (((1 << 7) + (DQL & 127)) << 7) >>
69                                       ;           (14 - ((DQL >> 7) & 15)));
70                                       ; **************************************************
71        P:0000 3A0200  [2 -        2]            move              #2,n2
72        P:0001 70F400  [4 -        6]            move              #65533,n0
                 00FFFD
73        P:0003 3E0300  [2 -        8]            move              #3,n6
74        P:0004 605E00  [2 -       10]            move              r0,x:(r6)+
75        P:0005 205E00  [2 -       12]            move              (r6)+
76        P:0006 22D000  [2 -       14]            move              r6,r0
77        P:0007 204E00  [2 -       16]            move              (r6)+n6
78        P:0008 515E00  [2 -       18]            move              b0,x:(r6)+
79        P:0009 555E00  [2 -       20]            move              b1,x:(r6)+
80        P:000A 445E00  [2 -       22]            move              x0,x:(r6)+
81        P:000B 455E00  [2 -       24]            move              x1,x:(r6)+
82        P:000C 615E00  [2 -       26]            move              r1,x:(r6)+
83        P:000D 61F400  [4 -       30]            move              #F___qtab0,r1
                 000000
84        P:000F 625E00  [2 -       32]            move              r2,x:(r6)+
85        P:0010 62E800  [4 -       36]            move              x:(r0+n0),r2
86        P:0011 222F00  [2 -       38]            move              r1,b
87        P:0012 45EA00  [4 -       42]            move              x:(r2+n2),x1
88        P:0013 56F000  [4 -       46]            move              x:FI,a
                 000015
89        P:0015 200018  [2 -       48]            add     a,b
90        P:0016 21B169  [2 -       50]            tfr     x1,b      b1,r1
91        P:0017 21AF00  [2 -       52]            move              b1,b
92        P:0018 44E12A  [2 -       54]            asr     b         x:(r1),x0
93        P:0019 20002A  [2 -       56]            asr     b
94        P:001A 21AF00  [2 -       58]            move              b1,b
95        P:001B 44F448  [4 -       62]            add     x0,b      #>4095,x0
                 000FFF
96        P:001D 44F44E  [4 -       66]            and     x0,b      #>8,x0
                 000008
97        P:001F 21AF46  [2 -       68]            and     x0,a      b1,b
98        P:0020 218E00  [2 -       70]            move              a1,a
99        P:0021 218500  [2 -       72]            move              a1,x1
100       P:0022 44F400  [4 -       76]            move              #>2048,x0
                 000800
101       P:0024 5560A8  [2 -       78]            mpy     +x0,x1,b  b1,x:(r0)
102       P:0025 20582A  [2 -       80]            asr     b         (r0)+
103       P:0026 212F00  [2 -       82]            move              b0,b
104       P:0027 555000  [2 -       84]            move              b1,x:(r0)-
105       P:0028 56E000  [2 -       86]            move              x:(r0),a
106       P:0029 200046  [2 -       88]            and     x0,a
107       P:002A 218E00  [2 -       90]            move              a1,a
108       P:002B 200003  [2 -       92]            tst     a
109       P:002C 0AF0A2  [6 -       98]            jne     L2
                 000051
110       P:002E 45F400  [4 -      102]            move              #>128,x1
                 000080
111       P:0030 56E000  [2 -      104]            move              x:(r0),a
112       P:0031 44F400  [4 -      108]            move              #>127,x0
                 00007F
113       P:0033 200046  [2 -      110]            and     x0,a
114       P:0034 218E00  [2 -      112]            move              a1,a
115       P:0035 200060  [2 -      114]            add     x1,a
116       P:0036 0607A0  [4 -      118]            rep     #7
117       P:0037 200032  [2 -      120]            asl     a
118       P:0038 57E000  [2 -      122]            move              x:(r0),b
119       P:0039 21AF00  [2 -      124]            move              b1,b
120       P:003A 218E00  [2 -      126]            move              a1,a
121       P:003B 0607A0  [4 -      130]            rep     #7
122       P:003C 20002A  [2 -      132]            asr     b
123       P:003D 44F400  [4 -      136]            move              #>15,x0
                 00000F
124       P:003F 21AF00  [2 -      138]            move              b1,b
125       P:0040 20004E  [2 -      140]            and     x0,b
126       P:0041 21AF00  [2 -      142]            move              b1,b
127       P:0042 21A500  [2 -      144]            move              b1,x1
128       P:0043 57F400  [4 -      148]            move              #>14,b
                 00000E
129       P:0045 20006C  [2 -      150]            sub     x1,b
130       P:0046 20000B  [2 -      152]            tst     b
131       P:0047 0AF0AA  [6 -      158]            jeq     L3
                 00004D
132       P:0049 218E00  [2 -      160]            move              a1,a
133       P:004A 06CF20  [4 -      164]            rep     b
134       P:004B 200022  [2 -      166]            asr     a
135       P:004C 218E00  [2 -      168]            move              a1,a
136                                      L3
137       P:004D 205800  [2 -      170]            move              (r0)+
138       P:004E 57D000  [2 -      172]            move              x:(r0)-,b
139       P:004F 205818  [2 -      174]            add     a,b       (r0)+
140       P:0050 555000  [2 -      176]            move              b1,x:(r0)-
141                                      L2
142                                      ; **************************************************
143                                      ; }
144                                      ; **************************************************
145       P:0051 205600  [2 -      178]            move              (r6)-
146       P:0052 205800  [2 -      180]            move              (r0)+
147       P:0053 45D000  [2 -      182]            move              x:(r0)-,x1
148       P:0054 456200  [2 -      184]            move              x1,x:(r2)
149       P:0055 62D600  [2 -      186]            move              x:(r6)-,r2
150       P:0056 61D600  [2 -      188]            move              x:(r6)-,r1
151       P:0057 45D600  [2 -      190]            move              x:(r6)-,x1
152       P:0058 44D600  [2 -      192]            move              x:(r6)-,x0
153       P:0059 57D600  [2 -      194]            move              x:(r6)-,b
154       P:005A 51E600  [2 -      196]            move              x:(r6),b0
155       P:005B 205000  [2 -      198]            move              (r0)-
156       P:005C 205000  [2 -      200]            move              (r0)-
157       P:005D 221600  [2 -      202]            move              r0,r6
158       P:005E 60E000  [2 -      204]            move              x:(r0),r0
159       P:005F 00000C  [4 -      208]            rts
160    
161       X:0010                                   org     x:
162                                                global  FTDP
163       X:0010 000000                  FTDP      bsc     1
164                                                global  FSP
165       X:0011 000000                  FSP       bsc     1
166                                                global  FSL
167       X:0012 000000                  FSL       bsc     1
168                                                global  FS_E
169       X:0013 000000                  FS_E      bsc     1
170                                                global  FSD
171       X:0014 000000                  FSD       bsc     1
172                                                global  FI
173       X:0015 000000                  FI        bsc     1
174                                                global  FD
175       X:0016 000000                  FD        bsc     1
176                                                global  FAL
177       X:0017 000000                  FAL       bsc     1
178                                                global  FA_2
179       X:0018 000000                  FA_2      bsc     1
180    
181                                                endsec
182    
183                                      ; 
184    
0    Errors
0    Warnings
