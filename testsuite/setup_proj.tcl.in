# to run:
# quartus_sh -t setup_proj.tcl <family> <verilog_name>

# Load necessary package.
load_package flow
load_package report
#load_package ::quartus::sta

project_new @MAIN_RTL_ENTITY@ -overwrite

#set_global_assignment -name FAMILY [lindex $quartus(args) 0]
#set_global_assignment -name DEVICE AUTO

# Target: DE2 Board
set_global_assignment -name FAMILY CycloneII
set_global_assignment -name DEVICE EP4CE75F29C6

# Target: StratixII
#set_global_assignment -name FAMILY StratixII
# fix Stratix II no fit on gsm
#set_global_assignment -name DEVICE EP2S60F484C3

set_global_assignment -name TOP_LEVEL_ENTITY @MAIN_RTL_ENTITY@
set_global_assignment -name SOURCE_FILE @MAIN_RTL_SRC@
set_global_assignment -name SDC_FILE @MAIN_SDC_SRC@

set_global_assignment -name VERILOG_MACRO "quartus_synthesis"
#############################################################################
set ENABLE_PHYSICAL_SYNTHESIS "@ENABLE_PHYSICAL_SYNTHESIS@"

source @VTS_SOURCE_ROOT@/quartus_compile.tcl
#############################################################################
execute_module -tool sta -args {--report_script @VTS_SOURCE_ROOT@/extract_timing.tcl}

load_report
#Report failing paths.
#qsta_utility::generate_top_failures_per_clock 10 

# Summary
set DataJSON [open "@BenchmarkSummaryTmp@" a+]

puts $DataJSON ",\n\{\"name\":\"@MAIN_RTL_ENTITY@\","
puts $DataJSON "\"restricted_fmax\":\"[get_report_panel_data -name {*Fmax*} -col 1 -row 1]\","
#############################################################################
set MAIN_RTL_ENTITY "@MAIN_RTL_ENTITY@"
set BenchmarkReportTmp "@BenchmarkReportTmp@"

source @VTS_SOURCE_ROOT@/report_json_data.tcl
###################

#Read the execution cycles
set cycleFile [open "@MAIN_RTL_ENTITY@.txt" r]
#while { [gets $cycleFile line] >= 0 } {
gets $cycleFile line
regexp {@MAIN_RTL_ENTITY@ hardware run cycles ([0-9]+) wait cycles ([0-9]+)} $line match total wait
set total
set wait
puts $DataJSON "\"cycles\":\"$total\",\"wait\":\"$wait\""
#}
close $cycleFile

###################
puts $DataJSON "\}"
close $DataJSON

##########################################################

project_close
